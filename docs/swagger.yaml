basePath: /
definitions:
  messages.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  models.Author:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.AuthorCreateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.AuthorResponse:
    properties:
      author_id:
        type: integer
      author_name:
        type: string
    type: object
  models.BookCreateRequest:
    properties:
      author_id:
        type: integer
      language_id:
        type: integer
      original_book_id:
        type: integer
      title:
        type: string
    type: object
  models.BookResponse:
    properties:
      author:
        $ref: '#/definitions/models.AuthorResponse'
      created_at:
        type: string
      id:
        type: integer
      language:
        $ref: '#/definitions/models.LanguageResponse'
      original_book:
        $ref: '#/definitions/models.OriginalBook'
      tags:
        items:
          $ref: '#/definitions/models.BookTag'
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.BookTag:
    properties:
      tag_description:
        type: string
      tag_id:
        type: integer
    type: object
  models.LanguageResponse:
    properties:
      language_description:
        type: string
      language_id:
        type: integer
    type: object
  models.OriginalBook:
    properties:
      original_book_id:
        type: integer
      original_book_title:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Babel Book Library API
  version: "1.0"
paths:
  /api/books:
    post:
      consumes:
      - application/json
      operationId: create-book
      parameters:
      - description: Book detail to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.BookCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.BookResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Book
      tags:
      - Book
  /api/books/:
    get:
      consumes:
      - application/json
      operationId: get-all-books
      parameters:
      - description: List page
        in: query
        name: page
        type: integer
      - description: List limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.BookResponse'
                  type: array
              type: object
        "502":
          description: Bad Gateway
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get all books
      tags:
      - Book
  /api/books/{id}:
    get:
      consumes:
      - application/json
      operationId: get-book-by-id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.BookResponse'
              type: object
        "502":
          description: Bad Gateway
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get book by id
      tags:
      - Book
  /authors:
    post:
      consumes:
      - application/json
      operationId: create-author
      parameters:
      - description: Author detail to create
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AuthorCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Author
      tags:
      - Authors
  /authors/:
    get:
      consumes:
      - application/json
      operationId: get-all-authors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Author'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get All Authors
      tags:
      - Authors
  /authors/{id}:
    get:
      consumes:
      - application/json
      operationId: get-author-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Get Author By Id
      tags:
      - Authors
    put:
      consumes:
      - application/json
      operationId: update-author-by-id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Author'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/messages.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Update Author
      tags:
      - Authors
swagger: "2.0"
